{"version":3,"sources":["components/AddCategory.jsx","Services/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","components/Footer.jsx","GiftExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","placeholder","value","onChange","target","id","getGifs","category","numImages","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","tittle","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","Footer","href","onClick","$","animate","scrollTop","GiftExpertApp","categories","setNumImages","selectedEffect","handleAdd","num","document","ready","click","toggleClass","text","this","removeClass","name","offsetParent","app","querySelector","ReactDom","render"],"mappings":"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","file":"static/js/main.f55b5b1b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n//* ES: COMPONENTE FUNCIONAL ENCARGADO DEL INPUT \n//* EN: FUNCTIONAL COMPONENT IN CHARGE OF THE INPUT\n\nexport const AddCategory = ({ setCategories }) => {\n\n    //Hooks\n    const [inputValue, setInputValue] = useState('');\n\n    //Functions\n\n    // * Función simple para setear a mi hook el valor ingresado en mi input ↓\n    // * Simple function to set my hook the value entered in my input ↓\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n\n    /*  \n\n    ESPAÑOL VERSION: \n\n    * Esta función  recibe el valor ingresado en el input encargado de busqueda, \n    * luego deshabilito el evento del submit para el efecto reactivo,  \n    * el if que verán dentro solo controla que el valor ingresado contenga al menos 3 letras.\n    \n    ENGLISH VERSION: \n\n    * This function receives the value entered in the search input,\n    * then I disable the submit event for the reactive effect,\n    * the (if) you will see inside only controls that the entered value contains at least 3 letters.\n    \n    */\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n\n    }\n\n    // Esto es solo un simple input ↓ \n    // This just is a simple input ↓\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Example: Dragon Ball Z\" aria-label=\"Dragon Ball Z\" aria-describedby=\"button-addon2\"\n                        value={inputValue}\n                        onChange={handleInputChange}\n                    />\n                    <button className=\"btn btn-outline-secondary text-success\" type=\"submit\" id=\"button-addon2\">Go!</button>\n                </div>\n            </form>\n        </>\n    )\n}\n\n/* \nESPAÑOL VERSION: \n\n* Esto controla un error que se podría generar al trabajar en equipo, de esta forma al generarse un error, informaría por pantalla que el parámetro/props setCategories es requerido \n* para poder trabajar en este componente.\n\nENGLISH VERSION:\n\n* This controls an error that could be generated when working in a team, in this way when an error is generated, it would inform on the screen that the / props setCategories parameter is required\n* to be able to work on this component.\n\n*/\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n//* ES: Función simple que hace la petición a la API de acuerdo a las solicitudes que haga el usuario, estas mismas entran mediante props. \n//* EN: // * Simple function that makes the request to the API according to the requests made by the user, these are entered through props.\n\nexport const getGifs = async (category, numImages) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?limit=${numImages}&q=${encodeURI(category)}&api_key=umucPVeT4olRI9Bmf3KbRYWLoVA7vy22`\n    const resp = await fetch(url);\n    const { data } = await resp.json(); // desestructura la data\n\n    //* ES: Mapeo la información que voy a utilizar unicamente. \n    //* EN: I map the information that I will use only.\n\n  \n    \n    let gifs = data.map(img => {\n            return {\n                id: img.id === \"\" ? \"Not found id\": img.id,\n                tittle: img.title === \"\" ? \"Not found tittle\": img.title, \n                url: img.images?.downsized_medium.url === \"\" ? \"https://media.tenor.com/images/2d39c2937b6adcf2e9f0b7bd258fb3f8/tenor.gif\":img.images?.downsized_medium.url\n\n            }\n    })\n   \n    if(data.length === 0 ){\n        gifs = [{\n            id:'N',\n            tittle:\"Not found\",\n            url: \"https://media.tenor.com/images/2d39c2937b6adcf2e9f0b7bd258fb3f8/tenor.gif\"\n        }]\n    }\n    return  gifs;\n}","import React from 'react'\n\n//* Componente funcional encargado de pintar los datos en la forma que quiero que se estructuren el mismo está mapeado por el componente GifGrid.\n//* Functional component in charge of painting the data in the way I want it to be structured, it is mapped by the GifGrid component.\n\n\nexport const GifGridItem = ( { tittle, url:img } ) => {\n    \n    return ( \n\n        <div className='card animate__animated animate__fadeIn animate__delay-1s bg-blues' >\n\n            <img className=\"imgCard\" src={ img } alt={ tittle } />\n            <p> { tittle }</p>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs.jsx'\nimport { GifGridItem } from './GifGridItem.jsx';\n\n\n//* ES: COMPONENTE FUNCIONAL ENCARGADO DE MOSTRAR LAS IMAGENES POR PANTALLAS A TRAVES DE UN HOOK QUE CONTIENE TODA LA API QUE DESEA VER EL USUARIO. \n\n//* EN:  FUNCTIONAL COMPONENT IN CHARGE OF DISPLAYING THE IMAGES BY SCREENS THROUGH A HOOK THAT CONTAINS ALL THE API THAT THE USER WANTS TO SEE.\n\nexport const GifGrid = ({ category , numImages }) => {\n\n    const { data:images , loading } = useFetchGifs(category, numImages); //si no se entiende aquí, solo uso el hook useState (custom- Hook), que trae los datos de la api y la cantidad de imagenes que desea ver el usuario. Por otra parte a \"data\" le seteo un nombre más acorde a la info que me trae al ponerle \":images\"\n    \n    return (\n\n        <>\n            <h3 className='card animate__animated animate__fadeIn mt-2 bg-blues'> {category}</h3>\n            \n            { loading && <p className='card animate__animated animate__flash text-black'> Loading...</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map(img =>\n                        <GifGridItem\n                            key={img.id}\n                            {...img} \n                        />\n                    )\n                }\n            </div>\n\n        </>\n\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../Services/getGifs'\n\n\n//* ES: Este es un Custom Hook, por ello lo desgloso en una carpeta aparte, este mismo está encargado de recuperar una función que es la que hace la petición a la api para luego ser usada en otro componente.\n//* EN: // * This is a Custom Hook, so I break it down into a separate folder, it is responsible for retrieving a function that is the one that makes the request to the api and then be used in another component.\n\nexport const useFetchGifs = (category, numImages) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    \n    // * Este useEffect se va a encargar de renderizar esta función cuando algun valor de caterogy o numImages cambie. \n    // * This useEffect will take care of rendering this function when any value of caterogy or numImages changes.\n\n    useEffect(() => {\n\n        getGifs(category, numImages)\n            .then(imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category, numImages])\n\n\n    return state;\n\n}\n","import React from 'react'\nimport { $ } from 'react-jquery-plugin'\n\n//* COMPONENTE FUNCIONAL ENCARGADO DE MOSTRAR EL FOOTER \n// * FUNCTIONAL COMPONENT IN CHARGE OF DISPLAYING THE FOOTER\n\nexport const Footer = () => {\n\n\n    //Functions\n    const goToTop = () =>{\n        $('html, body').animate({ scrollTop: 0 }, 'fast');\n    }\n\n    return (\n\n        <div className=\"site-footer\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6\">\n                        <h6>About</h6>\n                        <p className=\"text-justify\">Junior developer, I started my career in 2020 for loving technology in a virtual Bootcamp.\n\n                            Today, I have experience in developing responsive web applications in full java stack, using:\n\n                            For the frontend I use frameworks like Vue.js , Vue CLI -V 3.x and React.js.\n\n                            For backend I use Java with frameworks like Spring with Maven or Gradle support.\n\n                            Other technologies that I currently use:\n                        <span className=\"text-danger\">\n                            HTML\n                            CSS 3\n                            JavaScript\n                            Jquery\n                            Agile\n                            Ajax\n                            Python \n                            Visual Basic\n                            SQL\n                        </span>\n                         </p>\n                    </div>\n\n\n                    <div className=\"col-xs-6 col-md-3\">\n                        <h6>Quick Links</h6>\n                        <ul className=\"footer-links\">\n                            <li><a href=\"https://github.com/AgustinEstrada13\">About Me</a></li>\n                            <li><button type=\"button\" className=\"btn btn-outline-secondary mt-2\" onClick={goToTop}>Go to Top</button> </li>\n                        </ul>\n                    </div>\n                </div>\n                <hr />\n            </div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 col-sm-6 col-xs-12\">\n                        <p className=\"copyright-text\">Copyright &copy; 2021 - Agustín Estrada -\n                            <a href=\"https://www.linkedin.com/in/agust%C3%ADn-estrada-9b74a220a/\"> Profile</a>.\n                        </p>\n                    </div>\n\n                    <div className=\"col-md-4 col-sm-6 col-xs-12\">\n                        <ul className=\"social-icons\">\n                            <li><a className=\"GitHub\" href=\"https://github.com/AgustinEstrada13\"><i className=\"fa fa-github\"></i></a></li>\n                            <li><a className=\"linkedin\" href=\"https://www.linkedin.com/in/agust%C3%ADn-estrada-9b74a220a/\"><i className=\"fa fa-linkedin\"></i></a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { AddCategory } from './components/AddCategory.jsx'\nimport { GifGrid } from './components/GifGrid.jsx'\nimport { $ } from 'react-jquery-plugin'\nimport { Footer } from './components/Footer.jsx'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n//* ES: COMPONENTE FUNCIONAL -> PADRE.  ENCARGADO DE LA VISTA DE LA APP. \n//* EN: FUNCTIONAL COMPONENT -> FATHER. MANAGER OF THE APP VIEW.\n\nconst GiftExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Dragon Ball']);\n    const [numImages, setNumImages] = useState(15)\n\n    //hooks\n    useEffect(() => {\n        selectedEffect();\n        <Footer />\n    }, [])\n\n\n    //functions\n    const handleAdd = (num) =>{\n         setNumImages(num);    \n    }\n\n    const selectedEffect = () => {\n\n        $(document).ready(function () {\n           \n            $(\".selLabel\").click(function () {\n                $('.dropdown').toggleClass('active');\n            });\n\n            $(\".dropdown-list li\").click(function () {\n                $('.selLabel').text($(this).text());\n                $('.dropdown').removeClass('active');\n                $('.selected-item p span').text($('.selLabel').text());\n            });\n\n        });\n\n    }\n\n    return (\n\n        <div>\n\n            <div className=\"contain d-flex flex-row justify-content-between\">\n\n                <h2 className='mt-5 text-center text-danger'>Gift Expert App | Find Yours Favorite Gifs </h2>\n\n                <div>\n                    <div className=\"selected-item\">\n                        <p>Selected : <span>15</span></p>\n                    </div>\n\n                    <div className=\"dropdown\">\n                        <span className=\"selLabel\">How Many Images?</span>\n                        <input type=\"hidden\" name=\"cd-dropdown\" />\n                        <ul className=\"dropdown-list\">\n                            <li onClick={e => handleAdd(e.target.offsetParent.id)} id=\"15\">\n                                <span>15 Images</span>\n                            </li>\n                            <li onClick={e => handleAdd(e.target.offsetParent.id)} id=\"25\">\n                                <span>25 Images</span>\n                            </li>\n                            <li onClick={e => handleAdd(e.target.offsetParent.id)} id=\"35\">\n                                <span>35 Images</span>\n                            </li>\n                            <li onClick={e => handleAdd(e.target.offsetParent.id)} id=\"50\">\n                                <span>50 Images</span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n            <ol>\n                {\n\n                    categories.map(category =>\n                        <GifGrid\n                            key={ category }\n                            category={ category }\n                            numImages={ numImages } />\n                    )\n\n                }\n\n            </ol>\n            \n            <>\n\n            <Footer />\n\n            </>\n\n        </div>\n\n\n    )\n}\n\nexport default GiftExpertApp;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp.jsx'\nimport './index.css'\n\n\nconst app = document.querySelector('#app');\n\n\nReactDom.render(<GiftExpertApp />, app );\n\n"],"sourceRoot":""}